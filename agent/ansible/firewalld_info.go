// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

// This module gathers information about firewalld rules.
const FirewalldInfoName = "firewalld_info"

// Parameters for the `firewalld_info` Ansible module.
type FirewalldInfoParameters struct {
	// Gather information about active zones.
	// default: false
	ActiveZones *bool `json:"active_zones,omitempty"`

	// Gather information about specific zones.
	// If only works if `active_zones=false`.
	Zones *[]string `json:"zones,omitempty"`
}

// Wrap the `FirewalldInfoParameters into an `rpc.RPCCall`.
func (p *FirewalldInfoParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: FirewalldInfoName,
			Args: args,
		},
	}, nil
}

// Return values for the `firewalld_info` Ansible module.
type FirewalldInfoReturn struct {
	AnsibleCommonReturns

	// Gather active zones only if turn it `true`.
	ActiveZones *bool `json:"active_zones,omitempty"`

	// A list of collected zones.
	CollectedZones *[]any `json:"collected_zones,omitempty"`

	// A list of undefined zones in `zones` option.
	// `undefined_zones` will be ignored for gathering process.
	UndefinedZones *[]any `json:"undefined_zones,omitempty"`

	// Returns various information about firewalld configuration.
	FirewalldInfo *any `json:"firewalld_info,omitempty"`
}

// Unwrap the `rpc.RPCResult` into an `FirewalldInfoReturn`
func FirewalldInfoReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (FirewalldInfoReturn, error) {
	return rpc.AnyToJSONT[FirewalldInfoReturn](r.Result.Result)
}
