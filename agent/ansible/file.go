// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const FileName = "file"

type FileParameters struct {
	Path                   string  `json:"path"`
	State                  *string `json:"state,omitempty"`
	Src                    *string `json:"src,omitempty"`
	Recurse                *bool   `json:"recurse,omitempty"`
	Force                  *bool   `json:"force,omitempty"`
	Follow                 *bool   `json:"follow,omitempty"`
	ModificationTime       *string `json:"modification_time,omitempty"`
	ModificationTimeFormat *string `json:"modification_time_format,omitempty"`
	AccessTime             *string `json:"access_time,omitempty"`
	AccessTimeFormat       *string `json:"access_time_format,omitempty"`
}

func (p *FileParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: FileName,
			Args: args,
		},
	}, nil
}

type FileReturn struct {
	AnsibleCommonReturns
	Dest *string `json:"dest,omitempty"`
	Path *string `json:"path,omitempty"`
}

func FileReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (FileReturn, error) {
	return rpc.AnyToJSONT[FileReturn](r.Result.Result)
}
