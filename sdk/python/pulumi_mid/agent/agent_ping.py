# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload

if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    "AgentPingResult",
    "AwaitableAgentPingResult",
    "agent_ping",
    "agent_ping_output",
]


@pulumi.output_type
class AgentPingResult:
    def __init__(__self__, ping=None, pong=None):
        if ping and not isinstance(ping, str):
            raise TypeError("Expected argument 'ping' to be a str")
        pulumi.set(__self__, "ping", ping)
        if pong and not isinstance(pong, str):
            raise TypeError("Expected argument 'pong' to be a str")
        pulumi.set(__self__, "pong", pong)

    @property
    @pulumi.getter
    def ping(self) -> builtins.str:
        return pulumi.get(self, "ping")

    @property
    @pulumi.getter
    def pong(self) -> builtins.str:
        return pulumi.get(self, "pong")


class AwaitableAgentPingResult(AgentPingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return AgentPingResult(ping=self.ping, pong=self.pong)


def agent_ping(
    ping: Optional[builtins.str] = None, opts: Optional[pulumi.InvokeOptions] = None
) -> AwaitableAgentPingResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__["ping"] = ping
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke(
        "mid:agent:agentPing", __args__, opts=opts, typ=AgentPingResult
    ).value

    return AwaitableAgentPingResult(
        ping=pulumi.get(__ret__, "ping"), pong=pulumi.get(__ret__, "pong")
    )


def agent_ping_output(
    ping: Optional[pulumi.Input[Optional[builtins.str]]] = None,
    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None,
) -> pulumi.Output[AgentPingResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__["ping"] = ping
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output(
        "mid:agent:agentPing", __args__, opts=opts, typ=AgentPingResult
    )
    return __ret__.apply(
        lambda __response__: AgentPingResult(
            ping=pulumi.get(__response__, "ping"), pong=pulumi.get(__response__, "pong")
        )
    )
