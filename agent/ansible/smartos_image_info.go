// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

// Retrieve information about all installed images on SmartOS.
const SmartosImageInfoName = "smartos_image_info"

// Parameters for the `smartos_image_info` Ansible module.
type SmartosImageInfoParameters struct {
	// Criteria for selecting image. Can be any value from image manifest and
	// `published_date`, `published`, `source`, `clones`, and `size`.
	// More information can be found at `https://smartos.org/man/1m/imgadm` under
	// `imgadm list`.
	Filters *string `json:"filters,omitempty"`
}

// Wrap the `SmartosImageInfoParameters into an `rpc.RPCCall`.
func (p SmartosImageInfoParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: SmartosImageInfoName,
			Args: args,
		},
	}, nil
}

// Return values for the `smartos_image_info` Ansible module.
type SmartosImageInfoReturn struct {
	AnsibleCommonReturns
}

// Unwrap the `rpc.RPCResult` into an `SmartosImageInfoReturn`
func SmartosImageInfoReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (SmartosImageInfoReturn, error) {
	return rpc.AnyToJSONT[SmartosImageInfoReturn](r.Result.Result)
}
