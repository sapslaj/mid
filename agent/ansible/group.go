// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const GroupName = "group"

type GroupParameters struct {
	Name      string  `json:"name"`
	Gid       *int    `json:"gid,omitempty"`
	State     *string `json:"state,omitempty"`
	Force     *bool   `json:"force,omitempty"`
	System    *bool   `json:"system,omitempty"`
	Local     *bool   `json:"local,omitempty"`
	NonUnique *bool   `json:"non_unique,omitempty"`
	GidMin    *int    `json:"gid_min,omitempty"`
	GidMax    *int    `json:"gid_max,omitempty"`
}

func (p *GroupParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: GroupName,
			Args: args,
		},
	}, nil
}

type GroupReturn struct {
	AnsibleCommonReturns
	Gid    *int    `json:"gid,omitempty"`
	Name   *string `json:"name,omitempty"`
	State  *string `json:"state,omitempty"`
	System *bool   `json:"system,omitempty"`
}

func GroupReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (GroupReturn, error) {
	return rpc.AnyToJSONT[GroupReturn](r.Result.Result)
}
