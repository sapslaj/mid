name: Build/Test

on:
  workflow_dispatch:
  push:

env:
  GOPRIVATE: github.com/sapslaj

jobs:
  build-provider:
    name: build-provider
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch:
          - amd64
          - arm64
        goos:
          - linux
          - windows
          - darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        id: git
        with:
          submodules: "recursive"
          fetch-depth: 0
          fetch-tags: true
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: just, go, python
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: "0"
        run: |
          set -eux
          just provider
          ls -lh ./agent/mid-agent-*
          file ./agent/mid-agent-*
          ls -lh ./bin/pulumi-resource-mid
          file ./bin/pulumi-resource-mid

  smoketest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        id: git
        with:
          submodules: "recursive"
          fetch-depth: 0
          fetch-tags: true
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: all
      - name: Run smoketest container
        run: |
          docker build -t mid-smoketest docker/smoketest/
          docker run -p 2222:22 --name mid-smoketest -d mid-smoketest
      - name: Build
        id: build
        run: just build
      - name: Install
        id: install
        run: just install
      - name: PulumiUp
        id: up
        run: just test-example-up
      - name: PulumiDown
        id: down
        run: just test-example-down

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: just, go, python
      - run: just provider_version=v0.0.0-ci agent-codegen
      - name: go test
        run: |
          go test \
            -timeout=5m \
            -v \
            -race \
            -covermode atomic \
            -coverprofile=coverage.out \
            -coverpkg=github.com/sapslaj/mid/agent,github.com/sapslaj/mid/provider/...,github.com/sapslaj/mid/pkg... \
            ./pkg/... ./provider/...
      - name: Send coverage
        if: ${{ always() }}
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
          flag-name: test-unit
          parallel: true

  test-integration:
    runs-on: ubuntu-latest
    services:
      dind:
        image: docker:23.0-rc-dind-rootless
        ports:
          - 2375:2375
    steps:
      - uses: actions/checkout@v4
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: just, go, python, qemu
      - uses: actions/cache@v4
        with:
          path: tests/testmachine/noble-server-cloudimg-amd64.img
          key: noble-server-cloudimg-amd64.img-${{ hashFiles('./tests/testmachine/testmachine.go') }}
      - run: just provider_version=v0.0.0-ci agent-codegen
      - name: go test
        run: |
          go test \
            -timeout=10m \
            -v \
            -race \
            -covermode atomic \
            -coverprofile=coverage.out \
            -coverpkg=github.com/sapslaj/mid/agent,github.com/sapslaj/mid/provider/...,github.com/sapslaj/mid/pkg... \
            ./tests/integration/...
        env:
          PULUMI_MID_LOG_LEVEL: DEBUG
      - name: Send coverage
        if: ${{ always() }}
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
          flag-name: test-integration
          parallel: true

  test-acceptance:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: all
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::854523357306:role/github-actions
          role-session-name: ${{ env.GITHUB_JOB }}
          aws-region: us-east-1
      - run: just provider_version=v0.0.0-ci provider-debug fmt install
      - name: add GOPATH/bin to PATH
        run: echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
      - name: setup .npmrc
        run: |
          echo "@sapslaj:registry=https://npm.pkg.github.com" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
      - name: go test -timeout=1h -v -race ./tests/acceptance/...
        run: |
          export GOCOVERDIR="$(pwd)/covdatafiles.out"
          go test -timeout=1h -v -race ./tests/acceptance/...
      - name: Gather coverage
        if: ${{ always() }}
        run: go tool covdata textfmt -i="$(pwd)/covdatafiles.out" -o=coverage.out
      - name: Send coverage
        if: ${{ always() }}
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
          flag-name: test-integration
          parallel: true

  send-coverage:
    needs:
      - test-unit
      - test-integration
      - test-acceptance
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
