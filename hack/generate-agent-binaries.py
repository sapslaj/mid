#!/usr/bin/env python3

import pathlib


GOOS = [
    # only support linux for now
    "linux",
]

GOARCH = [
    "amd64",
    "arm64",
]


def main():
    filepath = pathlib.Path(__file__).parent / ".." / "agent" / "zzz_agent_binaries.go"
    with open(filepath, "w") as f:
        f.writelines(
            [
                "// Code generated by ./hack/generate-agent-binaries DO NOT EDIT\n",
                "package agent\n",
                "\n",
                "import (\n",
                '\t_ "embed"\n',
                '\t"fmt"\n',
                ")\n" "\n",
            ]
        )
        for goos in GOOS:
            for goarch in GOARCH:
                f.writelines(
                    [
                        f'//go:generate env GOOS={goos} GOARCH={goarch} go build -ldflags "-s -w" -o ./mid-agent-{goos}-{goarch} ./cmd/mid-agent/\n',
                        f"//go:embed mid-agent-{goos}-{goarch}\n",
                        f"var AgentBinary_{goos}_{goarch}_ []byte\n",
                        "\n",
                    ]
                )
        f.writelines(
            [
                "func GetAgentBinary(goos string, goarch string) ([]byte, error) {\n",
                "\tswitch goos {\n",
            ]
        )
        for goos in GOOS:
            f.writelines(
                [
                    f'\tcase "{goos}":\n',
                    "\t\tswitch goarch {\n",
                ]
            )
            for goarch in GOARCH:
                f.writelines(
                    [
                        f'\t\tcase "{goarch}":\n',
                        f"\t\t\treturn AgentBinary_{goos}_{goarch}_, nil\n",
                    ]
                )
            f.writelines(
                [
                    "\t\tdefault:\n",
                    '\t\t\treturn nil, fmt.Errorf("unsupported GOARCH=%s", goarch)\n',
                    "\t\t}\n",
                ]
            )

        f.writelines(
            [
                "\tdefault:\n",
                '\t\treturn nil, fmt.Errorf("unsupported GOOS=%s", goos)\n',
                "\t}\n",
                "}\n",
            ]
        )


if __name__ == "__main__":
    main()
