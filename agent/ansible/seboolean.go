// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

// Toggles SELinux booleans.
const SebooleanName = "seboolean"

// Parameters for the `seboolean` Ansible module.
type SebooleanParameters struct {
	// Name of the boolean to configure.
	Name string `json:"name"`

	// Set to `true` if the boolean setting should survive a reboot.
	// default: false
	Persistent *bool `json:"persistent,omitempty"`

	// Desired boolean value.
	State bool `json:"state"`

	// Useful for scenarios (chrooted environment) that you can't get the real
	// SELinux state.
	// default: false
	IgnoreSelinuxState *bool `json:"ignore_selinux_state,omitempty"`
}

// Wrap the `SebooleanParameters into an `rpc.RPCCall`.
func (p *SebooleanParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: SebooleanName,
			Args: args,
		},
	}, nil
}

// Return values for the `seboolean` Ansible module.
type SebooleanReturn struct {
	AnsibleCommonReturns
}

// Unwrap the `rpc.RPCResult` into an `SebooleanReturn`
func SebooleanReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (SebooleanReturn, error) {
	return rpc.AnyToJSONT[SebooleanReturn](r.Result.Result)
}
