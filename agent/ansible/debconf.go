// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const DebconfName = "debconf"

type DebconfParameters struct {
	Name     string  `json:"name"`
	Question *string `json:"question,omitempty"`
	Vtype    *string `json:"vtype,omitempty"`
	Value    *any    `json:"value,omitempty"`
	Unseen   *bool   `json:"unseen,omitempty"`
}

func (p *DebconfParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: DebconfName,
			Args: args,
		},
	}, nil
}

type DebconfReturn struct {
	AnsibleCommonReturns
}

func DebconfReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (DebconfReturn, error) {
	return rpc.AnyToJSONT[DebconfReturn](r.Result.Result)
}
