// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const UriName = "uri"

type UriParameters struct {
	Ciphers             *[]string       `json:"ciphers,omitempty"`
	Decompress          *bool           `json:"decompress,omitempty"`
	Url                 string          `json:"url"`
	Dest                *string         `json:"dest,omitempty"`
	UrlUsername         *string         `json:"url_username,omitempty"`
	UrlPassword         *string         `json:"url_password,omitempty"`
	Body                *any            `json:"body,omitempty"`
	BodyFormat          *string         `json:"body_format,omitempty"`
	Method              *string         `json:"method,omitempty"`
	ReturnContent       *bool           `json:"return_content,omitempty"`
	ForceBasicAuth      *bool           `json:"force_basic_auth,omitempty"`
	FollowRedirects     *string         `json:"follow_redirects,omitempty"`
	Creates             *string         `json:"creates,omitempty"`
	Removes             *string         `json:"removes,omitempty"`
	StatusCode          *[]int          `json:"status_code,omitempty"`
	Timeout             *int            `json:"timeout,omitempty"`
	Headers             *map[string]any `json:"headers,omitempty"`
	ValidateCerts       *bool           `json:"validate_certs,omitempty"`
	ClientCert          *string         `json:"client_cert,omitempty"`
	ClientKey           *string         `json:"client_key,omitempty"`
	CaPath              *string         `json:"ca_path,omitempty"`
	Src                 *string         `json:"src,omitempty"`
	RemoteSrc           *bool           `json:"remote_src,omitempty"`
	Force               *bool           `json:"force,omitempty"`
	UseProxy            *bool           `json:"use_proxy,omitempty"`
	UnixSocket          *string         `json:"unix_socket,omitempty"`
	HttpAgent           *string         `json:"http_agent,omitempty"`
	UnredirectedHeaders *[]string       `json:"unredirected_headers,omitempty"`
	UseGssapi           *bool           `json:"use_gssapi,omitempty"`
	UseNetrc            *bool           `json:"use_netrc,omitempty"`
	Mode                *any            `json:"mode,omitempty"`
	Owner               *string         `json:"owner,omitempty"`
	Group               *string         `json:"group,omitempty"`
	Seuser              *string         `json:"seuser,omitempty"`
	Serole              *string         `json:"serole,omitempty"`
	Setype              *string         `json:"setype,omitempty"`
	Selevel             *string         `json:"selevel,omitempty"`
	UnsafeWrites        *bool           `json:"unsafe_writes,omitempty"`
	Attributes          *string         `json:"attributes,omitempty"`
}

func (p *UriParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: UriName,
			Args: args,
		},
	}, nil
}

type UriReturn struct {
	AnsibleCommonReturns
	Content       *string         `json:"content,omitempty"`
	Cookies       *map[string]any `json:"cookies,omitempty"`
	CookiesString *string         `json:"cookies_string,omitempty"`
	Elapsed       *int            `json:"elapsed,omitempty"`
	Msg           *string         `json:"msg,omitempty"`
	Path          *string         `json:"path,omitempty"`
	Redirected    *bool           `json:"redirected,omitempty"`
	Status        *int            `json:"status,omitempty"`
	Url           *string         `json:"url,omitempty"`
}

func UriReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (UriReturn, error) {
	return rpc.AnyToJSONT[UriReturn](r.Result.Result)
}
