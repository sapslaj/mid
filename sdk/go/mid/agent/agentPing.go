// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package agent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/mid/internal"
)

func AgentPing(ctx *pulumi.Context, args *AgentPingArgs, opts ...pulumi.InvokeOption) (*AgentPingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AgentPingResult
	err := ctx.Invoke("mid:agent:agentPing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type AgentPingArgs struct {
	Ping *string `pulumi:"ping"`
}

type AgentPingResult struct {
	Ping string `pulumi:"ping"`
	Pong string `pulumi:"pong"`
}

func AgentPingOutput(ctx *pulumi.Context, args AgentPingOutputArgs, opts ...pulumi.InvokeOption) AgentPingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (AgentPingResultOutput, error) {
			args := v.(AgentPingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mid:agent:agentPing", args, AgentPingResultOutput{}, options).(AgentPingResultOutput), nil
		}).(AgentPingResultOutput)
}

type AgentPingOutputArgs struct {
	Ping pulumi.StringPtrInput `pulumi:"ping"`
}

func (AgentPingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPingArgs)(nil)).Elem()
}

type AgentPingResultOutput struct{ *pulumi.OutputState }

func (AgentPingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPingResult)(nil)).Elem()
}

func (o AgentPingResultOutput) ToAgentPingResultOutput() AgentPingResultOutput {
	return o
}

func (o AgentPingResultOutput) ToAgentPingResultOutputWithContext(ctx context.Context) AgentPingResultOutput {
	return o
}

func (o AgentPingResultOutput) Ping() pulumi.StringOutput {
	return o.ApplyT(func(v AgentPingResult) string { return v.Ping }).(pulumi.StringOutput)
}

func (o AgentPingResultOutput) Pong() pulumi.StringOutput {
	return o.ApplyT(func(v AgentPingResult) string { return v.Pong }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentPingResultOutput{})
}
