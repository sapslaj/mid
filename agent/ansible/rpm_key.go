// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const RpmKeyName = "rpm_key"

type RpmKeyParameters struct {
	Key           string    `json:"key"`
	State         *string   `json:"state,omitempty"`
	ValidateCerts *bool     `json:"validate_certs,omitempty"`
	Fingerprint   *[]string `json:"fingerprint,omitempty"`
}

func (p *RpmKeyParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: RpmKeyName,
			Args: args,
		},
	}, nil
}

type RpmKeyReturn struct {
	AnsibleCommonReturns
}

func RpmKeyReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (RpmKeyReturn, error) {
	return rpc.AnyToJSONT[RpmKeyReturn](r.Result.Result)
}
