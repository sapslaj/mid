// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const Deb822RepositoryName = "deb822_repository"

type Deb822RepositoryParameters struct {
	AllowDowngradeToInsecure *bool     `json:"allow_downgrade_to_insecure,omitempty"`
	AllowInsecure            *bool     `json:"allow_insecure,omitempty"`
	AllowWeak                *bool     `json:"allow_weak,omitempty"`
	Architectures            *[]string `json:"architectures,omitempty"`
	ByHash                   *bool     `json:"by_hash,omitempty"`
	CheckDate                *bool     `json:"check_date,omitempty"`
	CheckValidUntil          *bool     `json:"check_valid_until,omitempty"`
	Components               *[]string `json:"components,omitempty"`
	DateMaxFuture            *int      `json:"date_max_future,omitempty"`
	Enabled                  *bool     `json:"enabled,omitempty"`
	InreleasePath            *string   `json:"inrelease_path,omitempty"`
	Languages                *[]string `json:"languages,omitempty"`
	Name                     string    `json:"name"`
	Pdiffs                   *bool     `json:"pdiffs,omitempty"`
	SignedBy                 *string   `json:"signed_by,omitempty"`
	Suites                   *[]string `json:"suites,omitempty"`
	Targets                  *[]string `json:"targets,omitempty"`
	Trusted                  *bool     `json:"trusted,omitempty"`
	Types                    *[]string `json:"types,omitempty"`
	Uris                     *[]string `json:"uris,omitempty"`
	Mode                     *any      `json:"mode,omitempty"`
	State                    *string   `json:"state,omitempty"`
}

func (p *Deb822RepositoryParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: Deb822RepositoryName,
			Args: args,
		},
	}, nil
}

type Deb822RepositoryReturn struct {
	AnsibleCommonReturns
	Repo        *string `json:"repo,omitempty"`
	Dest        *string `json:"dest,omitempty"`
	KeyFilename *string `json:"key_filename,omitempty"`
}

func Deb822RepositoryReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (Deb822RepositoryReturn, error) {
	return rpc.AnyToJSONT[Deb822RepositoryReturn](r.Result.Result)
}
