// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package types

import (
	"context"
	"reflect"

	"example.com/pulumi-mid/sdk/go/mid/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type TriggersInput struct {
	Refresh []interface{} `pulumi:"refresh"`
	Replace []interface{} `pulumi:"replace"`
}

// TriggersInputInput is an input type that accepts TriggersInputArgs and TriggersInputOutput values.
// You can construct a concrete instance of `TriggersInputInput` via:
//
//	TriggersInputArgs{...}
type TriggersInputInput interface {
	pulumi.Input

	ToTriggersInputOutput() TriggersInputOutput
	ToTriggersInputOutputWithContext(context.Context) TriggersInputOutput
}

type TriggersInputArgs struct {
	Refresh pulumi.ArrayInput `pulumi:"refresh"`
	Replace pulumi.ArrayInput `pulumi:"replace"`
}

func (TriggersInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersInput)(nil)).Elem()
}

func (i TriggersInputArgs) ToTriggersInputOutput() TriggersInputOutput {
	return i.ToTriggersInputOutputWithContext(context.Background())
}

func (i TriggersInputArgs) ToTriggersInputOutputWithContext(ctx context.Context) TriggersInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggersInputOutput)
}

func (i TriggersInputArgs) ToTriggersInputPtrOutput() TriggersInputPtrOutput {
	return i.ToTriggersInputPtrOutputWithContext(context.Background())
}

func (i TriggersInputArgs) ToTriggersInputPtrOutputWithContext(ctx context.Context) TriggersInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggersInputOutput).ToTriggersInputPtrOutputWithContext(ctx)
}

// TriggersInputPtrInput is an input type that accepts TriggersInputArgs, TriggersInputPtr and TriggersInputPtrOutput values.
// You can construct a concrete instance of `TriggersInputPtrInput` via:
//
//	        TriggersInputArgs{...}
//
//	or:
//
//	        nil
type TriggersInputPtrInput interface {
	pulumi.Input

	ToTriggersInputPtrOutput() TriggersInputPtrOutput
	ToTriggersInputPtrOutputWithContext(context.Context) TriggersInputPtrOutput
}

type triggersInputPtrType TriggersInputArgs

func TriggersInputPtr(v *TriggersInputArgs) TriggersInputPtrInput {
	return (*triggersInputPtrType)(v)
}

func (*triggersInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersInput)(nil)).Elem()
}

func (i *triggersInputPtrType) ToTriggersInputPtrOutput() TriggersInputPtrOutput {
	return i.ToTriggersInputPtrOutputWithContext(context.Background())
}

func (i *triggersInputPtrType) ToTriggersInputPtrOutputWithContext(ctx context.Context) TriggersInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggersInputPtrOutput)
}

type TriggersInputOutput struct{ *pulumi.OutputState }

func (TriggersInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersInput)(nil)).Elem()
}

func (o TriggersInputOutput) ToTriggersInputOutput() TriggersInputOutput {
	return o
}

func (o TriggersInputOutput) ToTriggersInputOutputWithContext(ctx context.Context) TriggersInputOutput {
	return o
}

func (o TriggersInputOutput) ToTriggersInputPtrOutput() TriggersInputPtrOutput {
	return o.ToTriggersInputPtrOutputWithContext(context.Background())
}

func (o TriggersInputOutput) ToTriggersInputPtrOutputWithContext(ctx context.Context) TriggersInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersInput) *TriggersInput {
		return &v
	}).(TriggersInputPtrOutput)
}

func (o TriggersInputOutput) Refresh() pulumi.ArrayOutput {
	return o.ApplyT(func(v TriggersInput) []interface{} { return v.Refresh }).(pulumi.ArrayOutput)
}

func (o TriggersInputOutput) Replace() pulumi.ArrayOutput {
	return o.ApplyT(func(v TriggersInput) []interface{} { return v.Replace }).(pulumi.ArrayOutput)
}

type TriggersInputPtrOutput struct{ *pulumi.OutputState }

func (TriggersInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersInput)(nil)).Elem()
}

func (o TriggersInputPtrOutput) ToTriggersInputPtrOutput() TriggersInputPtrOutput {
	return o
}

func (o TriggersInputPtrOutput) ToTriggersInputPtrOutputWithContext(ctx context.Context) TriggersInputPtrOutput {
	return o
}

func (o TriggersInputPtrOutput) Elem() TriggersInputOutput {
	return o.ApplyT(func(v *TriggersInput) TriggersInput {
		if v != nil {
			return *v
		}
		var ret TriggersInput
		return ret
	}).(TriggersInputOutput)
}

func (o TriggersInputPtrOutput) Refresh() pulumi.ArrayOutput {
	return o.ApplyT(func(v *TriggersInput) []interface{} {
		if v == nil {
			return nil
		}
		return v.Refresh
	}).(pulumi.ArrayOutput)
}

func (o TriggersInputPtrOutput) Replace() pulumi.ArrayOutput {
	return o.ApplyT(func(v *TriggersInput) []interface{} {
		if v == nil {
			return nil
		}
		return v.Replace
	}).(pulumi.ArrayOutput)
}

type TriggersOutput struct {
	LastChanged string        `pulumi:"lastChanged"`
	Refresh     []interface{} `pulumi:"refresh"`
	Replace     []interface{} `pulumi:"replace"`
}

type TriggersOutputOutput struct{ *pulumi.OutputState }

func (TriggersOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOutput)(nil)).Elem()
}

func (o TriggersOutputOutput) ToTriggersOutputOutput() TriggersOutputOutput {
	return o
}

func (o TriggersOutputOutput) ToTriggersOutputOutputWithContext(ctx context.Context) TriggersOutputOutput {
	return o
}

func (o TriggersOutputOutput) LastChanged() pulumi.StringOutput {
	return o.ApplyT(func(v TriggersOutput) string { return v.LastChanged }).(pulumi.StringOutput)
}

func (o TriggersOutputOutput) Refresh() pulumi.ArrayOutput {
	return o.ApplyT(func(v TriggersOutput) []interface{} { return v.Refresh }).(pulumi.ArrayOutput)
}

func (o TriggersOutputOutput) Replace() pulumi.ArrayOutput {
	return o.ApplyT(func(v TriggersOutput) []interface{} { return v.Replace }).(pulumi.ArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TriggersInputInput)(nil)).Elem(), TriggersInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggersInputPtrInput)(nil)).Elem(), TriggersInputArgs{})
	pulumi.RegisterOutputType(TriggersInputOutput{})
	pulumi.RegisterOutputType(TriggersInputPtrOutput{})
	pulumi.RegisterOutputType(TriggersOutputOutput{})
}
