// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package agent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/mid/internal"
)

var _ = internal.GetEnvOrDefault

type FileStatFileMode struct {
	Int       int    `pulumi:"int"`
	IsDir     bool   `pulumi:"isDir"`
	IsRegular bool   `pulumi:"isRegular"`
	Octal     string `pulumi:"octal"`
	String    string `pulumi:"string"`
}

type FileStatFileModeOutput struct{ *pulumi.OutputState }

func (FileStatFileModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStatFileMode)(nil)).Elem()
}

func (o FileStatFileModeOutput) ToFileStatFileModeOutput() FileStatFileModeOutput {
	return o
}

func (o FileStatFileModeOutput) ToFileStatFileModeOutputWithContext(ctx context.Context) FileStatFileModeOutput {
	return o
}

func (o FileStatFileModeOutput) Int() pulumi.IntOutput {
	return o.ApplyT(func(v FileStatFileMode) int { return v.Int }).(pulumi.IntOutput)
}

func (o FileStatFileModeOutput) IsDir() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStatFileMode) bool { return v.IsDir }).(pulumi.BoolOutput)
}

func (o FileStatFileModeOutput) IsRegular() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStatFileMode) bool { return v.IsRegular }).(pulumi.BoolOutput)
}

func (o FileStatFileModeOutput) Octal() pulumi.StringOutput {
	return o.ApplyT(func(v FileStatFileMode) string { return v.Octal }).(pulumi.StringOutput)
}

func (o FileStatFileModeOutput) String() pulumi.StringOutput {
	return o.ApplyT(func(v FileStatFileMode) string { return v.String }).(pulumi.StringOutput)
}

type FileStatFileModePtrOutput struct{ *pulumi.OutputState }

func (FileStatFileModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStatFileMode)(nil)).Elem()
}

func (o FileStatFileModePtrOutput) ToFileStatFileModePtrOutput() FileStatFileModePtrOutput {
	return o
}

func (o FileStatFileModePtrOutput) ToFileStatFileModePtrOutputWithContext(ctx context.Context) FileStatFileModePtrOutput {
	return o
}

func (o FileStatFileModePtrOutput) Elem() FileStatFileModeOutput {
	return o.ApplyT(func(v *FileStatFileMode) FileStatFileMode {
		if v != nil {
			return *v
		}
		var ret FileStatFileMode
		return ret
	}).(FileStatFileModeOutput)
}

func (o FileStatFileModePtrOutput) Int() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileStatFileMode) *int {
		if v == nil {
			return nil
		}
		return &v.Int
	}).(pulumi.IntPtrOutput)
}

func (o FileStatFileModePtrOutput) IsDir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileStatFileMode) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDir
	}).(pulumi.BoolPtrOutput)
}

func (o FileStatFileModePtrOutput) IsRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileStatFileMode) *bool {
		if v == nil {
			return nil
		}
		return &v.IsRegular
	}).(pulumi.BoolPtrOutput)
}

func (o FileStatFileModePtrOutput) Octal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileStatFileMode) *string {
		if v == nil {
			return nil
		}
		return &v.Octal
	}).(pulumi.StringPtrOutput)
}

func (o FileStatFileModePtrOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileStatFileMode) *string {
		if v == nil {
			return nil
		}
		return &v.String
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FileStatFileModeOutput{})
	pulumi.RegisterOutputType(FileStatFileModePtrOutput{})
}
