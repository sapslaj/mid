// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FileArgs } from "./file";
export type File = import("./file").File;
export const File: typeof import("./file").File = null as any;
utilities.lazyLoad(exports, ["File"], () => require("./file"));

export { PackageArgs } from "./package";
export type Package = import("./package").Package;
export const Package: typeof import("./package").Package = null as any;
utilities.lazyLoad(exports, ["Package"], () => require("./package"));

export { ServiceArgs } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "mid:resource:File":
                return new File(name, <any>undefined, { urn })
            case "mid:resource:Package":
                return new Package(name, <any>undefined, { urn })
            case "mid:resource:Service":
                return new Service(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("mid", "resource", _module)
