// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package agent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/mid/internal"
)

func Exec(ctx *pulumi.Context, args *ExecArgs, opts ...pulumi.InvokeOption) (*ExecResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ExecResult
	err := ctx.Invoke("mid:agent:exec", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ExecArgs struct {
	Command     []string          `pulumi:"command"`
	Dir         *string           `pulumi:"dir"`
	Environment map[string]string `pulumi:"environment"`
	Stdin       *string           `pulumi:"stdin"`
}

type ExecResult struct {
	Command     []string          `pulumi:"command"`
	Dir         *string           `pulumi:"dir"`
	Environment map[string]string `pulumi:"environment"`
	ExitCode    int               `pulumi:"exitCode"`
	Pid         int               `pulumi:"pid"`
	Stderr      string            `pulumi:"stderr"`
	Stdin       *string           `pulumi:"stdin"`
	Stdout      string            `pulumi:"stdout"`
}

func ExecOutput(ctx *pulumi.Context, args ExecOutputArgs, opts ...pulumi.InvokeOption) ExecResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ExecResultOutput, error) {
			args := v.(ExecArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mid:agent:exec", args, ExecResultOutput{}, options).(ExecResultOutput), nil
		}).(ExecResultOutput)
}

type ExecOutputArgs struct {
	Command     pulumi.StringArrayInput `pulumi:"command"`
	Dir         pulumi.StringPtrInput   `pulumi:"dir"`
	Environment pulumi.StringMapInput   `pulumi:"environment"`
	Stdin       pulumi.StringPtrInput   `pulumi:"stdin"`
}

func (ExecOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecArgs)(nil)).Elem()
}

type ExecResultOutput struct{ *pulumi.OutputState }

func (ExecResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecResult)(nil)).Elem()
}

func (o ExecResultOutput) ToExecResultOutput() ExecResultOutput {
	return o
}

func (o ExecResultOutput) ToExecResultOutputWithContext(ctx context.Context) ExecResultOutput {
	return o
}

func (o ExecResultOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExecResult) []string { return v.Command }).(pulumi.StringArrayOutput)
}

func (o ExecResultOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecResult) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o ExecResultOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExecResult) map[string]string { return v.Environment }).(pulumi.StringMapOutput)
}

func (o ExecResultOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v ExecResult) int { return v.ExitCode }).(pulumi.IntOutput)
}

func (o ExecResultOutput) Pid() pulumi.IntOutput {
	return o.ApplyT(func(v ExecResult) int { return v.Pid }).(pulumi.IntOutput)
}

func (o ExecResultOutput) Stderr() pulumi.StringOutput {
	return o.ApplyT(func(v ExecResult) string { return v.Stderr }).(pulumi.StringOutput)
}

func (o ExecResultOutput) Stdin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecResult) *string { return v.Stdin }).(pulumi.StringPtrOutput)
}

func (o ExecResultOutput) Stdout() pulumi.StringOutput {
	return o.ApplyT(func(v ExecResult) string { return v.Stdout }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ExecResultOutput{})
}
