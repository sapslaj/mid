// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resource

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/ansible/internal"
)

var _ = internal.GetEnvOrDefault

type FileStateStat struct {
	Atime      float64  `pulumi:"atime"`
	Attributes []string `pulumi:"attributes"`
	Charset    string   `pulumi:"charset"`
	Checksum   string   `pulumi:"checksum"`
	Ctime      float64  `pulumi:"ctime"`
	Dev        int      `pulumi:"dev"`
	Executable bool     `pulumi:"executable"`
	Exists     bool     `pulumi:"exists"`
	Gid        int      `pulumi:"gid"`
	Gr_name    string   `pulumi:"gr_name"`
	Inode      int      `pulumi:"inode"`
	Isblk      bool     `pulumi:"isblk"`
	Ischr      bool     `pulumi:"ischr"`
	Isdir      bool     `pulumi:"isdir"`
	Isfifo     bool     `pulumi:"isfifo"`
	Isgid      bool     `pulumi:"isgid"`
	Islnk      bool     `pulumi:"islnk"`
	Isreg      bool     `pulumi:"isreg"`
	Issock     bool     `pulumi:"issock"`
	Isuid      bool     `pulumi:"isuid"`
	LnkSource  string   `pulumi:"lnkSource"`
	LnkTarget  string   `pulumi:"lnkTarget"`
	Mimetype   string   `pulumi:"mimetype"`
	Mode       string   `pulumi:"mode"`
	Mtime      float64  `pulumi:"mtime"`
	Nlink      int      `pulumi:"nlink"`
	Path       string   `pulumi:"path"`
	PwName     string   `pulumi:"pwName"`
	Readable   bool     `pulumi:"readable"`
	Rgrp       bool     `pulumi:"rgrp"`
	Roth       bool     `pulumi:"roth"`
	Rusr       bool     `pulumi:"rusr"`
	Size       int      `pulumi:"size"`
	Uid        int      `pulumi:"uid"`
	Version    string   `pulumi:"version"`
	Wgrp       bool     `pulumi:"wgrp"`
	Woth       bool     `pulumi:"woth"`
	Writeable  bool     `pulumi:"writeable"`
	Wusr       bool     `pulumi:"wusr"`
	Xgrp       bool     `pulumi:"xgrp"`
	Xoth       bool     `pulumi:"xoth"`
	Xusr       bool     `pulumi:"xusr"`
}

type FileStateStatOutput struct{ *pulumi.OutputState }

func (FileStateStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStateStat)(nil)).Elem()
}

func (o FileStateStatOutput) ToFileStateStatOutput() FileStateStatOutput {
	return o
}

func (o FileStateStatOutput) ToFileStateStatOutputWithContext(ctx context.Context) FileStateStatOutput {
	return o
}

func (o FileStateStatOutput) Atime() pulumi.Float64Output {
	return o.ApplyT(func(v FileStateStat) float64 { return v.Atime }).(pulumi.Float64Output)
}

func (o FileStateStatOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FileStateStat) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

func (o FileStateStatOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Charset }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Checksum }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Ctime() pulumi.Float64Output {
	return o.ApplyT(func(v FileStateStat) float64 { return v.Ctime }).(pulumi.Float64Output)
}

func (o FileStateStatOutput) Dev() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Dev }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Executable() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Executable }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Exists() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Exists }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Gid }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Gr_name() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Gr_name }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Inode() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Inode }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Isblk() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isblk }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Ischr() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Ischr }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Isdir() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isdir }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Isfifo() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isfifo }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Isgid() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isgid }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Islnk() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Islnk }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Isreg() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isreg }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Issock() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Issock }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Isuid() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Isuid }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) LnkSource() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.LnkSource }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) LnkTarget() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.LnkTarget }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Mimetype() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Mimetype }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Mode }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Mtime() pulumi.Float64Output {
	return o.ApplyT(func(v FileStateStat) float64 { return v.Mtime }).(pulumi.Float64Output)
}

func (o FileStateStatOutput) Nlink() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Nlink }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Path }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) PwName() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.PwName }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Readable() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Readable }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Rgrp() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Rgrp }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Roth() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Roth }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Rusr() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Rusr }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Size }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v FileStateStat) int { return v.Uid }).(pulumi.IntOutput)
}

func (o FileStateStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FileStateStat) string { return v.Version }).(pulumi.StringOutput)
}

func (o FileStateStatOutput) Wgrp() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Wgrp }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Woth() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Woth }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Writeable() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Writeable }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Wusr() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Wusr }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Xgrp() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Xgrp }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Xoth() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Xoth }).(pulumi.BoolOutput)
}

func (o FileStateStatOutput) Xusr() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStateStat) bool { return v.Xusr }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(FileStateStatOutput{})
}
