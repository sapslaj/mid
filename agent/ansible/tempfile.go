// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const TempfileName = "tempfile"

type TempfileParameters struct {
	State  *string `json:"state,omitempty"`
	Path   *string `json:"path,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
}

func (p *TempfileParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: TempfileName,
			Args: args,
		},
	}, nil
}

type TempfileReturn struct {
	AnsibleCommonReturns
	Path *string `json:"path,omitempty"`
}

func TempfileReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (TempfileReturn, error) {
	return rpc.AnyToJSONT[TempfileReturn](r.Result.Result)
}
