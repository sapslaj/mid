// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const SubversionName = "subversion"

type SubversionParameters struct {
	Repo          string  `json:"repo"`
	Dest          *string `json:"dest,omitempty"`
	Revision      *string `json:"revision,omitempty"`
	Force         *bool   `json:"force,omitempty"`
	InPlace       *bool   `json:"in_place,omitempty"`
	Username      *string `json:"username,omitempty"`
	Password      *string `json:"password,omitempty"`
	Executable    *string `json:"executable,omitempty"`
	Checkout      *bool   `json:"checkout,omitempty"`
	Update        *bool   `json:"update,omitempty"`
	Export        *bool   `json:"export,omitempty"`
	Switch        *bool   `json:"switch,omitempty"`
	ValidateCerts *bool   `json:"validate_certs,omitempty"`
}

func (p *SubversionParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: SubversionName,
			Args: args,
		},
	}, nil
}

type SubversionReturn struct {
	AnsibleCommonReturns
}

func SubversionReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (SubversionReturn, error) {
	return rpc.AnyToJSONT[SubversionReturn](r.Result.Result)
}
