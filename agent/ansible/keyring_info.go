// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

// This module uses the `keyring Python library,
// https://pypi.org/project/keyring/` to retrieve passphrases for a given
// service and username from the OS' native keyring.
const KeyringInfoName = "keyring_info"

// Parameters for the `keyring_info` Ansible module.
type KeyringInfoParameters struct {
	// The name of the service.
	Service string `json:"service"`

	// The user belonging to the service.
	Username string `json:"username"`

	// Password to unlock keyring.
	KeyringPassword string `json:"keyring_password"`
}

// Wrap the `KeyringInfoParameters into an `rpc.RPCCall`.
func (p KeyringInfoParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: KeyringInfoName,
			Args: args,
		},
	}, nil
}

// Return values for the `keyring_info` Ansible module.
type KeyringInfoReturn struct {
	AnsibleCommonReturns

	// A string containing the password.
	Passphrase *string `json:"passphrase,omitempty"`
}

// Unwrap the `rpc.RPCResult` into an `KeyringInfoReturn`
func KeyringInfoReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (KeyringInfoReturn, error) {
	return rpc.AnyToJSONT[KeyringInfoReturn](r.Result.Result)
}
