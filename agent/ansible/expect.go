// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const ExpectName = "expect"

type ExpectParameters struct {
	Command   string         `json:"command"`
	Creates   *string        `json:"creates,omitempty"`
	Removes   *string        `json:"removes,omitempty"`
	Chdir     *string        `json:"chdir,omitempty"`
	Responses map[string]any `json:"responses"`
	Timeout   *any           `json:"timeout,omitempty"`
	Echo      *bool          `json:"echo,omitempty"`
}

func (p *ExpectParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: ExpectName,
			Args: args,
		},
	}, nil
}

type ExpectReturn struct {
	AnsibleCommonReturns
}

func ExpectReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (ExpectReturn, error) {
	return rpc.AnyToJSONT[ExpectReturn](r.Result.Result)
}
