// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const UserName = "user"

type UserParameters struct {
	Name                         string    `json:"name"`
	Uid                          *int      `json:"uid,omitempty"`
	Comment                      *string   `json:"comment,omitempty"`
	Hidden                       *bool     `json:"hidden,omitempty"`
	NonUnique                    *bool     `json:"non_unique,omitempty"`
	Seuser                       *string   `json:"seuser,omitempty"`
	Group                        *string   `json:"group,omitempty"`
	Groups                       *[]string `json:"groups,omitempty"`
	Append                       *bool     `json:"append,omitempty"`
	Shell                        *string   `json:"shell,omitempty"`
	Home                         *string   `json:"home,omitempty"`
	Skeleton                     *string   `json:"skeleton,omitempty"`
	Password                     *string   `json:"password,omitempty"`
	State                        *string   `json:"state,omitempty"`
	CreateHome                   *bool     `json:"create_home,omitempty"`
	MoveHome                     *bool     `json:"move_home,omitempty"`
	System                       *bool     `json:"system,omitempty"`
	Force                        *bool     `json:"force,omitempty"`
	Remove                       *bool     `json:"remove,omitempty"`
	LoginClass                   *string   `json:"login_class,omitempty"`
	GenerateSshKey               *bool     `json:"generate_ssh_key,omitempty"`
	SshKeyBits                   *int      `json:"ssh_key_bits,omitempty"`
	SshKeyType                   *string   `json:"ssh_key_type,omitempty"`
	SshKeyFile                   *string   `json:"ssh_key_file,omitempty"`
	SshKeyComment                *string   `json:"ssh_key_comment,omitempty"`
	SshKeyPassphrase             *string   `json:"ssh_key_passphrase,omitempty"`
	UpdatePassword               *string   `json:"update_password,omitempty"`
	Expires                      *float64  `json:"expires,omitempty"`
	PasswordLock                 *bool     `json:"password_lock,omitempty"`
	Local                        *bool     `json:"local,omitempty"`
	Profile                      *string   `json:"profile,omitempty"`
	Authorization                *string   `json:"authorization,omitempty"`
	Role                         *string   `json:"role,omitempty"`
	PasswordExpireMax            *int      `json:"password_expire_max,omitempty"`
	PasswordExpireMin            *int      `json:"password_expire_min,omitempty"`
	PasswordExpireWarn           *int      `json:"password_expire_warn,omitempty"`
	Umask                        *string   `json:"umask,omitempty"`
	PasswordExpireAccountDisable *int      `json:"password_expire_account_disable,omitempty"`
	UidMin                       *int      `json:"uid_min,omitempty"`
	UidMax                       *int      `json:"uid_max,omitempty"`
}

func (p *UserParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: UserName,
			Args: args,
		},
	}, nil
}

type UserReturn struct {
	AnsibleCommonReturns
	Append         *bool   `json:"append,omitempty"`
	Comment        *string `json:"comment,omitempty"`
	CreateHome     *bool   `json:"create_home,omitempty"`
	Force          *bool   `json:"force,omitempty"`
	Group          *int    `json:"group,omitempty"`
	Groups         *string `json:"groups,omitempty"`
	Home           *string `json:"home,omitempty"`
	MoveHome       *bool   `json:"move_home,omitempty"`
	Name           *string `json:"name,omitempty"`
	Password       *string `json:"password,omitempty"`
	Remove         *bool   `json:"remove,omitempty"`
	Shell          *string `json:"shell,omitempty"`
	SshFingerprint *string `json:"ssh_fingerprint,omitempty"`
	SshKeyFile     *string `json:"ssh_key_file,omitempty"`
	SshPublicKey   *string `json:"ssh_public_key,omitempty"`
	Stderr         *string `json:"stderr,omitempty"`
	Stdout         *string `json:"stdout,omitempty"`
	System         *bool   `json:"system,omitempty"`
	Uid            *int    `json:"uid,omitempty"`
}

func UserReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (UserReturn, error) {
	return rpc.AnyToJSONT[UserReturn](r.Result.Result)
}
