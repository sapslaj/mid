// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const MountFactsName = "mount_facts"

type MountFactsParameters struct {
	Devices                *[]string `json:"devices,omitempty"`
	Fstypes                *[]string `json:"fstypes,omitempty"`
	Sources                *[]string `json:"sources,omitempty"`
	MountBinary            *any      `json:"mount_binary,omitempty"`
	Timeout                *float64  `json:"timeout,omitempty"`
	OnTimeout              *string   `json:"on_timeout,omitempty"`
	IncludeAggregateMounts *bool     `json:"include_aggregate_mounts,omitempty"`
}

func (p *MountFactsParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: MountFactsName,
			Args: args,
		},
	}, nil
}

type MountFactsReturn struct {
	AnsibleCommonReturns
	AnsibleFacts *map[string]any `json:"ansible_facts,omitempty"`
}

func MountFactsReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (MountFactsReturn, error) {
	return rpc.AnyToJSONT[MountFactsReturn](r.Result.Result)
}
