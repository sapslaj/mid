// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const AssembleName = "assemble"

type AssembleParameters struct {
	Src          string  `json:"src"`
	Dest         string  `json:"dest"`
	Backup       *bool   `json:"backup,omitempty"`
	Delimiter    *string `json:"delimiter,omitempty"`
	RemoteSrc    *bool   `json:"remote_src,omitempty"`
	Regexp       *string `json:"regexp,omitempty"`
	IgnoreHidden *bool   `json:"ignore_hidden,omitempty"`
	Validate     *string `json:"validate,omitempty"`
}

func (p *AssembleParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: AssembleName,
			Args: args,
		},
	}, nil
}

type AssembleReturn struct {
	AnsibleCommonReturns
}

func AssembleReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (AssembleReturn, error) {
	return rpc.AnyToJSONT[AssembleReturn](r.Result.Result)
}
