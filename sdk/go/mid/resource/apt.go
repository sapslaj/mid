// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resource

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/mid"
	"github.com/sapslaj/mid/sdk/go/mid/internal"
)

type Apt struct {
	pulumi.CustomResourceState

	AllowChangeHeldPackages  pulumi.BoolPtrOutput        `pulumi:"allowChangeHeldPackages"`
	AllowDowngrade           pulumi.BoolPtrOutput        `pulumi:"allowDowngrade"`
	AllowUnauthenticated     pulumi.BoolPtrOutput        `pulumi:"allowUnauthenticated"`
	Autoclean                pulumi.BoolPtrOutput        `pulumi:"autoclean"`
	Autoremove               pulumi.BoolPtrOutput        `pulumi:"autoremove"`
	CacheValidTime           pulumi.IntPtrOutput         `pulumi:"cacheValidTime"`
	Clean                    pulumi.BoolPtrOutput        `pulumi:"clean"`
	Config                   mid.ResourceConfigPtrOutput `pulumi:"config"`
	Connection               mid.ConnectionPtrOutput     `pulumi:"connection"`
	Deb                      pulumi.StringPtrOutput      `pulumi:"deb"`
	DefaultRelease           pulumi.StringPtrOutput      `pulumi:"defaultRelease"`
	DpkgOptions              pulumi.StringPtrOutput      `pulumi:"dpkgOptions"`
	Ensure                   pulumi.StringPtrOutput      `pulumi:"ensure"`
	FailOnAutoremove         pulumi.BoolPtrOutput        `pulumi:"failOnAutoremove"`
	Force                    pulumi.BoolPtrOutput        `pulumi:"force"`
	ForceAptGet              pulumi.BoolPtrOutput        `pulumi:"forceAptGet"`
	InstallRecommends        pulumi.BoolPtrOutput        `pulumi:"installRecommends"`
	LockTimeout              pulumi.IntPtrOutput         `pulumi:"lockTimeout"`
	Name                     pulumi.StringPtrOutput      `pulumi:"name"`
	Names                    pulumi.StringArrayOutput    `pulumi:"names"`
	OnlyUpgrade              pulumi.BoolPtrOutput        `pulumi:"onlyUpgrade"`
	PackagesTracked          pulumi.StringArrayOutput    `pulumi:"packagesTracked"`
	PolicyRcD                pulumi.IntPtrOutput         `pulumi:"policyRcD"`
	Purge                    pulumi.BoolPtrOutput        `pulumi:"purge"`
	Triggers                 mid.TriggersOutputOutput    `pulumi:"triggers"`
	UpdateCache              pulumi.BoolPtrOutput        `pulumi:"updateCache"`
	UpdateCacheRetries       pulumi.IntPtrOutput         `pulumi:"updateCacheRetries"`
	UpdateCacheRetryMaxDelay pulumi.IntPtrOutput         `pulumi:"updateCacheRetryMaxDelay"`
	Upgrade                  pulumi.StringPtrOutput      `pulumi:"upgrade"`
}

// NewApt registers a new resource with the given unique name, arguments, and options.
func NewApt(ctx *pulumi.Context,
	name string, args *AptArgs, opts ...pulumi.ResourceOption) (*Apt, error) {
	if args == nil {
		args = &AptArgs{}
	}

	if args.Connection != nil {
		args.Connection = args.Connection.ToConnectionPtrOutput().ApplyT(func(v *mid.Connection) *mid.Connection { return v.Defaults() }).(mid.ConnectionPtrOutput)
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Apt
	err := ctx.RegisterResource("mid:resource:Apt", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApt gets an existing Apt resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApt(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AptState, opts ...pulumi.ResourceOption) (*Apt, error) {
	var resource Apt
	err := ctx.ReadResource("mid:resource:Apt", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Apt resources.
type aptState struct {
}

type AptState struct {
}

func (AptState) ElementType() reflect.Type {
	return reflect.TypeOf((*aptState)(nil)).Elem()
}

type aptArgs struct {
	AllowChangeHeldPackages  *bool               `pulumi:"allowChangeHeldPackages"`
	AllowDowngrade           *bool               `pulumi:"allowDowngrade"`
	AllowUnauthenticated     *bool               `pulumi:"allowUnauthenticated"`
	Autoclean                *bool               `pulumi:"autoclean"`
	Autoremove               *bool               `pulumi:"autoremove"`
	CacheValidTime           *int                `pulumi:"cacheValidTime"`
	Clean                    *bool               `pulumi:"clean"`
	Config                   *mid.ResourceConfig `pulumi:"config"`
	Connection               *mid.Connection     `pulumi:"connection"`
	Deb                      *string             `pulumi:"deb"`
	DefaultRelease           *string             `pulumi:"defaultRelease"`
	DpkgOptions              *string             `pulumi:"dpkgOptions"`
	Ensure                   *string             `pulumi:"ensure"`
	FailOnAutoremove         *bool               `pulumi:"failOnAutoremove"`
	Force                    *bool               `pulumi:"force"`
	ForceAptGet              *bool               `pulumi:"forceAptGet"`
	InstallRecommends        *bool               `pulumi:"installRecommends"`
	LockTimeout              *int                `pulumi:"lockTimeout"`
	Name                     *string             `pulumi:"name"`
	Names                    []string            `pulumi:"names"`
	OnlyUpgrade              *bool               `pulumi:"onlyUpgrade"`
	PolicyRcD                *int                `pulumi:"policyRcD"`
	Purge                    *bool               `pulumi:"purge"`
	Triggers                 *mid.TriggersInput  `pulumi:"triggers"`
	UpdateCache              *bool               `pulumi:"updateCache"`
	UpdateCacheRetries       *int                `pulumi:"updateCacheRetries"`
	UpdateCacheRetryMaxDelay *int                `pulumi:"updateCacheRetryMaxDelay"`
	Upgrade                  *string             `pulumi:"upgrade"`
}

// The set of arguments for constructing a Apt resource.
type AptArgs struct {
	AllowChangeHeldPackages  pulumi.BoolPtrInput
	AllowDowngrade           pulumi.BoolPtrInput
	AllowUnauthenticated     pulumi.BoolPtrInput
	Autoclean                pulumi.BoolPtrInput
	Autoremove               pulumi.BoolPtrInput
	CacheValidTime           pulumi.IntPtrInput
	Clean                    pulumi.BoolPtrInput
	Config                   mid.ResourceConfigPtrInput
	Connection               mid.ConnectionPtrInput
	Deb                      pulumi.StringPtrInput
	DefaultRelease           pulumi.StringPtrInput
	DpkgOptions              pulumi.StringPtrInput
	Ensure                   pulumi.StringPtrInput
	FailOnAutoremove         pulumi.BoolPtrInput
	Force                    pulumi.BoolPtrInput
	ForceAptGet              pulumi.BoolPtrInput
	InstallRecommends        pulumi.BoolPtrInput
	LockTimeout              pulumi.IntPtrInput
	Name                     pulumi.StringPtrInput
	Names                    pulumi.StringArrayInput
	OnlyUpgrade              pulumi.BoolPtrInput
	PolicyRcD                pulumi.IntPtrInput
	Purge                    pulumi.BoolPtrInput
	Triggers                 mid.TriggersInputPtrInput
	UpdateCache              pulumi.BoolPtrInput
	UpdateCacheRetries       pulumi.IntPtrInput
	UpdateCacheRetryMaxDelay pulumi.IntPtrInput
	Upgrade                  pulumi.StringPtrInput
}

func (AptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aptArgs)(nil)).Elem()
}

type AptInput interface {
	pulumi.Input

	ToAptOutput() AptOutput
	ToAptOutputWithContext(ctx context.Context) AptOutput
}

func (*Apt) ElementType() reflect.Type {
	return reflect.TypeOf((**Apt)(nil)).Elem()
}

func (i *Apt) ToAptOutput() AptOutput {
	return i.ToAptOutputWithContext(context.Background())
}

func (i *Apt) ToAptOutputWithContext(ctx context.Context) AptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AptOutput)
}

// AptArrayInput is an input type that accepts AptArray and AptArrayOutput values.
// You can construct a concrete instance of `AptArrayInput` via:
//
//	AptArray{ AptArgs{...} }
type AptArrayInput interface {
	pulumi.Input

	ToAptArrayOutput() AptArrayOutput
	ToAptArrayOutputWithContext(context.Context) AptArrayOutput
}

type AptArray []AptInput

func (AptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Apt)(nil)).Elem()
}

func (i AptArray) ToAptArrayOutput() AptArrayOutput {
	return i.ToAptArrayOutputWithContext(context.Background())
}

func (i AptArray) ToAptArrayOutputWithContext(ctx context.Context) AptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AptArrayOutput)
}

// AptMapInput is an input type that accepts AptMap and AptMapOutput values.
// You can construct a concrete instance of `AptMapInput` via:
//
//	AptMap{ "key": AptArgs{...} }
type AptMapInput interface {
	pulumi.Input

	ToAptMapOutput() AptMapOutput
	ToAptMapOutputWithContext(context.Context) AptMapOutput
}

type AptMap map[string]AptInput

func (AptMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Apt)(nil)).Elem()
}

func (i AptMap) ToAptMapOutput() AptMapOutput {
	return i.ToAptMapOutputWithContext(context.Background())
}

func (i AptMap) ToAptMapOutputWithContext(ctx context.Context) AptMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AptMapOutput)
}

type AptOutput struct{ *pulumi.OutputState }

func (AptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Apt)(nil)).Elem()
}

func (o AptOutput) ToAptOutput() AptOutput {
	return o
}

func (o AptOutput) ToAptOutputWithContext(ctx context.Context) AptOutput {
	return o
}

func (o AptOutput) AllowChangeHeldPackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.AllowChangeHeldPackages }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) AllowDowngrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.AllowDowngrade }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) AllowUnauthenticated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.AllowUnauthenticated }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) Autoclean() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.Autoclean }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) Autoremove() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.Autoremove }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) CacheValidTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.IntPtrOutput { return v.CacheValidTime }).(pulumi.IntPtrOutput)
}

func (o AptOutput) Clean() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.Clean }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) Config() mid.ResourceConfigPtrOutput {
	return o.ApplyT(func(v *Apt) mid.ResourceConfigPtrOutput { return v.Config }).(mid.ResourceConfigPtrOutput)
}

func (o AptOutput) Connection() mid.ConnectionPtrOutput {
	return o.ApplyT(func(v *Apt) mid.ConnectionPtrOutput { return v.Connection }).(mid.ConnectionPtrOutput)
}

func (o AptOutput) Deb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.Deb }).(pulumi.StringPtrOutput)
}

func (o AptOutput) DefaultRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.DefaultRelease }).(pulumi.StringPtrOutput)
}

func (o AptOutput) DpkgOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.DpkgOptions }).(pulumi.StringPtrOutput)
}

func (o AptOutput) Ensure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.Ensure }).(pulumi.StringPtrOutput)
}

func (o AptOutput) FailOnAutoremove() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.FailOnAutoremove }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.Force }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) ForceAptGet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.ForceAptGet }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) InstallRecommends() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.InstallRecommends }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) LockTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.IntPtrOutput { return v.LockTimeout }).(pulumi.IntPtrOutput)
}

func (o AptOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AptOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringArrayOutput { return v.Names }).(pulumi.StringArrayOutput)
}

func (o AptOutput) OnlyUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.OnlyUpgrade }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) PackagesTracked() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringArrayOutput { return v.PackagesTracked }).(pulumi.StringArrayOutput)
}

func (o AptOutput) PolicyRcD() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.IntPtrOutput { return v.PolicyRcD }).(pulumi.IntPtrOutput)
}

func (o AptOutput) Purge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.Purge }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) Triggers() mid.TriggersOutputOutput {
	return o.ApplyT(func(v *Apt) mid.TriggersOutputOutput { return v.Triggers }).(mid.TriggersOutputOutput)
}

func (o AptOutput) UpdateCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.BoolPtrOutput { return v.UpdateCache }).(pulumi.BoolPtrOutput)
}

func (o AptOutput) UpdateCacheRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.IntPtrOutput { return v.UpdateCacheRetries }).(pulumi.IntPtrOutput)
}

func (o AptOutput) UpdateCacheRetryMaxDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.IntPtrOutput { return v.UpdateCacheRetryMaxDelay }).(pulumi.IntPtrOutput)
}

func (o AptOutput) Upgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Apt) pulumi.StringPtrOutput { return v.Upgrade }).(pulumi.StringPtrOutput)
}

type AptArrayOutput struct{ *pulumi.OutputState }

func (AptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Apt)(nil)).Elem()
}

func (o AptArrayOutput) ToAptArrayOutput() AptArrayOutput {
	return o
}

func (o AptArrayOutput) ToAptArrayOutputWithContext(ctx context.Context) AptArrayOutput {
	return o
}

func (o AptArrayOutput) Index(i pulumi.IntInput) AptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Apt {
		return vs[0].([]*Apt)[vs[1].(int)]
	}).(AptOutput)
}

type AptMapOutput struct{ *pulumi.OutputState }

func (AptMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Apt)(nil)).Elem()
}

func (o AptMapOutput) ToAptMapOutput() AptMapOutput {
	return o
}

func (o AptMapOutput) ToAptMapOutputWithContext(ctx context.Context) AptMapOutput {
	return o
}

func (o AptMapOutput) MapIndex(k pulumi.StringInput) AptOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Apt {
		return vs[0].(map[string]*Apt)[vs[1].(string)]
	}).(AptOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AptInput)(nil)).Elem(), &Apt{})
	pulumi.RegisterInputType(reflect.TypeOf((*AptArrayInput)(nil)).Elem(), AptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AptMapInput)(nil)).Elem(), AptMap{})
	pulumi.RegisterOutputType(AptOutput{})
	pulumi.RegisterOutputType(AptArrayOutput{})
	pulumi.RegisterOutputType(AptMapOutput{})
}
