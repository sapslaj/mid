// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const GetentName = "getent"

type GetentParameters struct {
	Database string  `json:"database"`
	Key      *string `json:"key,omitempty"`
	Service  *string `json:"service,omitempty"`
	Split    *string `json:"split,omitempty"`
	FailKey  *bool   `json:"fail_key,omitempty"`
}

func (p *GetentParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: GetentName,
			Args: args,
		},
	}, nil
}

type GetentReturn struct {
	AnsibleCommonReturns
	AnsibleFacts *map[string]any `json:"ansible_facts,omitempty"`
}

func GetentReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (GetentReturn, error) {
	return rpc.AnyToJSONT[GetentReturn](r.Result.Result)
}
