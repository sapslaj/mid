// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mid.Resource
{
    [MidResourceType("mid:resource:File")]
    public partial class File : global::Pulumi.CustomResource
    {
        [Output("accessTime")]
        public Output<string?> AccessTime { get; private set; } = null!;

        [Output("accessTimeFormat")]
        public Output<string?> AccessTimeFormat { get; private set; } = null!;

        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        [Output("backup")]
        public Output<bool?> Backup { get; private set; } = null!;

        [Output("backupFile")]
        public Output<string?> BackupFile { get; private set; } = null!;

        [Output("checksum")]
        public Output<string?> Checksum { get; private set; } = null!;

        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        [Output("directoryMode")]
        public Output<string?> DirectoryMode { get; private set; } = null!;

        [Output("ensure")]
        public Output<string?> Ensure { get; private set; } = null!;

        [Output("follow")]
        public Output<bool?> Follow { get; private set; } = null!;

        [Output("force")]
        public Output<bool?> Force { get; private set; } = null!;

        [Output("group")]
        public Output<string?> Group { get; private set; } = null!;

        [Output("localFollow")]
        public Output<bool?> LocalFollow { get; private set; } = null!;

        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        [Output("modificationTime")]
        public Output<string?> ModificationTime { get; private set; } = null!;

        [Output("modificationTimeFormat")]
        public Output<string?> ModificationTimeFormat { get; private set; } = null!;

        [Output("owner")]
        public Output<string?> Owner { get; private set; } = null!;

        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        [Output("recurse")]
        public Output<bool?> Recurse { get; private set; } = null!;

        [Output("remoteSource")]
        public Output<string?> RemoteSource { get; private set; } = null!;

        [Output("selevel")]
        public Output<string?> Selevel { get; private set; } = null!;

        [Output("serole")]
        public Output<string?> Serole { get; private set; } = null!;

        [Output("setype")]
        public Output<string?> Setype { get; private set; } = null!;

        [Output("seuser")]
        public Output<string?> Seuser { get; private set; } = null!;

        [Output("source")]
        public Output<AssetOrArchive?> Source { get; private set; } = null!;

        [Output("stat")]
        public Output<Outputs.FileStateStat> Stat { get; private set; } = null!;

        [Output("triggers")]
        public Output<Pulumi.Mid.Types.Outputs.TriggersOutput> Triggers { get; private set; } = null!;

        [Output("unsafeWrites")]
        public Output<bool?> UnsafeWrites { get; private set; } = null!;

        [Output("validate")]
        public Output<string?> Validate { get; private set; } = null!;


        /// <summary>
        /// Create a File resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public File(string name, FileArgs? args = null, CustomResourceOptions? options = null)
            : base("mid:resource:File", name, args ?? new FileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private File(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("mid:resource:File", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing File resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static File Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new File(name, id, options);
        }
    }

    public sealed class FileArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessTime")]
        public Input<string>? AccessTime { get; set; }

        [Input("accessTimeFormat")]
        public Input<string>? AccessTimeFormat { get; set; }

        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        [Input("backup")]
        public Input<bool>? Backup { get; set; }

        [Input("checksum")]
        public Input<string>? Checksum { get; set; }

        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("directoryMode")]
        public Input<string>? DirectoryMode { get; set; }

        [Input("ensure")]
        public Input<string>? Ensure { get; set; }

        [Input("follow")]
        public Input<bool>? Follow { get; set; }

        [Input("force")]
        public Input<bool>? Force { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("localFollow")]
        public Input<bool>? LocalFollow { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("modificationTime")]
        public Input<string>? ModificationTime { get; set; }

        [Input("modificationTimeFormat")]
        public Input<string>? ModificationTimeFormat { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("recurse")]
        public Input<bool>? Recurse { get; set; }

        [Input("remoteSource")]
        public Input<string>? RemoteSource { get; set; }

        [Input("selevel")]
        public Input<string>? Selevel { get; set; }

        [Input("serole")]
        public Input<string>? Serole { get; set; }

        [Input("setype")]
        public Input<string>? Setype { get; set; }

        [Input("seuser")]
        public Input<string>? Seuser { get; set; }

        [Input("source")]
        public Input<AssetOrArchive>? Source { get; set; }

        [Input("triggers")]
        public Input<Pulumi.Mid.Types.Inputs.TriggersInputArgs>? Triggers { get; set; }

        [Input("unsafeWrites")]
        public Input<bool>? UnsafeWrites { get; set; }

        [Input("validate")]
        public Input<string>? Validate { get; set; }

        public FileArgs()
        {
        }
        public static new FileArgs Empty => new FileArgs();
    }
}
