// Code generated by ./hack/generate-ansible-types.py DO NOT EDIT
package ansible

import (
	"github.com/sapslaj/mid/agent/rpc"
)

const GetUrlName = "get_url"

type GetUrlParameters struct {
	Ciphers             *[]string       `json:"ciphers,omitempty"`
	Decompress          *bool           `json:"decompress,omitempty"`
	Url                 string          `json:"url"`
	Dest                string          `json:"dest"`
	TmpDest             *string         `json:"tmp_dest,omitempty"`
	Force               *bool           `json:"force,omitempty"`
	Backup              *bool           `json:"backup,omitempty"`
	Checksum            *string         `json:"checksum,omitempty"`
	UseProxy            *bool           `json:"use_proxy,omitempty"`
	ValidateCerts       *bool           `json:"validate_certs,omitempty"`
	Timeout             *int            `json:"timeout,omitempty"`
	Headers             *map[string]any `json:"headers,omitempty"`
	UrlUsername         *string         `json:"url_username,omitempty"`
	UrlPassword         *string         `json:"url_password,omitempty"`
	ForceBasicAuth      *bool           `json:"force_basic_auth,omitempty"`
	ClientCert          *string         `json:"client_cert,omitempty"`
	ClientKey           *string         `json:"client_key,omitempty"`
	HttpAgent           *string         `json:"http_agent,omitempty"`
	UnredirectedHeaders *[]string       `json:"unredirected_headers,omitempty"`
	UseGssapi           *bool           `json:"use_gssapi,omitempty"`
	UseNetrc            *bool           `json:"use_netrc,omitempty"`
}

func (p *GetUrlParameters) ToRPCCall() (rpc.RPCCall[rpc.AnsibleExecuteArgs], error) {
	args, err := rpc.AnyToJSONT[map[string]any](p)
	if err != nil {
		return rpc.RPCCall[rpc.AnsibleExecuteArgs]{}, err
	}
	return rpc.RPCCall[rpc.AnsibleExecuteArgs]{
		RPCFunction: rpc.RPCAnsibleExecute,
		Args: rpc.AnsibleExecuteArgs{
			Name: GetUrlName,
			Args: args,
		},
	}, nil
}

type GetUrlReturn struct {
	AnsibleCommonReturns
	BackupFile   *string `json:"backup_file,omitempty"`
	ChecksumDest *string `json:"checksum_dest,omitempty"`
	ChecksumSrc  *string `json:"checksum_src,omitempty"`
	Dest         *string `json:"dest,omitempty"`
	Elapsed      *int    `json:"elapsed,omitempty"`
	Gid          *int    `json:"gid,omitempty"`
	Group        *string `json:"group,omitempty"`
	Md5sum       *string `json:"md5sum,omitempty"`
	Mode         *string `json:"mode,omitempty"`
	Msg          *string `json:"msg,omitempty"`
	Owner        *string `json:"owner,omitempty"`
	Secontext    *string `json:"secontext,omitempty"`
	Size         *int    `json:"size,omitempty"`
	Src          *string `json:"src,omitempty"`
	State        *string `json:"state,omitempty"`
	StatusCode   *int    `json:"status_code,omitempty"`
	Uid          *int    `json:"uid,omitempty"`
	Url          *string `json:"url,omitempty"`
}

func GetUrlReturnFromRPCResult(r rpc.RPCResult[rpc.AnsibleExecuteResult]) (GetUrlReturn, error) {
	return rpc.AnyToJSONT[GetUrlReturn](r.Result.Result)
}
