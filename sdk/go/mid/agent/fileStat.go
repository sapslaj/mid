// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package agent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/mid/sdk/go/mid/internal"
)

func FileStat(ctx *pulumi.Context, args *FileStatArgs, opts ...pulumi.InvokeOption) (*FileStatResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv FileStatResult
	err := ctx.Invoke("mid:agent:fileStat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type FileStatArgs struct {
	CalculateChecksum *bool  `pulumi:"calculateChecksum"`
	FollowSymlinks    *bool  `pulumi:"followSymlinks"`
	Path              string `pulumi:"path"`
}

type FileStatResult struct {
	AccessTime        *string           `pulumi:"accessTime"`
	BaseName          *string           `pulumi:"baseName"`
	CalculateChecksum *bool             `pulumi:"calculateChecksum"`
	CreateTime        *string           `pulumi:"createTime"`
	Dev               *int              `pulumi:"dev"`
	Exists            bool              `pulumi:"exists"`
	FileMode          *FileStatFileMode `pulumi:"fileMode"`
	FollowSymlinks    *bool             `pulumi:"followSymlinks"`
	Gid               *int              `pulumi:"gid"`
	GroupName         *string           `pulumi:"groupName"`
	Inode             *int              `pulumi:"inode"`
	ModifiedTime      *string           `pulumi:"modifiedTime"`
	Nlink             *int              `pulumi:"nlink"`
	Path              string            `pulumi:"path"`
	Sha256Checksum    *string           `pulumi:"sha256Checksum"`
	Size              *int              `pulumi:"size"`
	Uid               *int              `pulumi:"uid"`
	UserName          *string           `pulumi:"userName"`
}

func FileStatOutput(ctx *pulumi.Context, args FileStatOutputArgs, opts ...pulumi.InvokeOption) FileStatResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (FileStatResultOutput, error) {
			args := v.(FileStatArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mid:agent:fileStat", args, FileStatResultOutput{}, options).(FileStatResultOutput), nil
		}).(FileStatResultOutput)
}

type FileStatOutputArgs struct {
	CalculateChecksum pulumi.BoolPtrInput `pulumi:"calculateChecksum"`
	FollowSymlinks    pulumi.BoolPtrInput `pulumi:"followSymlinks"`
	Path              pulumi.StringInput  `pulumi:"path"`
}

func (FileStatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStatArgs)(nil)).Elem()
}

type FileStatResultOutput struct{ *pulumi.OutputState }

func (FileStatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStatResult)(nil)).Elem()
}

func (o FileStatResultOutput) ToFileStatResultOutput() FileStatResultOutput {
	return o
}

func (o FileStatResultOutput) ToFileStatResultOutputWithContext(ctx context.Context) FileStatResultOutput {
	return o
}

func (o FileStatResultOutput) AccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.AccessTime }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) BaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.BaseName }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) CalculateChecksum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileStatResult) *bool { return v.CalculateChecksum }).(pulumi.BoolPtrOutput)
}

func (o FileStatResultOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) Dev() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Dev }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) Exists() pulumi.BoolOutput {
	return o.ApplyT(func(v FileStatResult) bool { return v.Exists }).(pulumi.BoolOutput)
}

func (o FileStatResultOutput) FileMode() FileStatFileModePtrOutput {
	return o.ApplyT(func(v FileStatResult) *FileStatFileMode { return v.FileMode }).(FileStatFileModePtrOutput)
}

func (o FileStatResultOutput) FollowSymlinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileStatResult) *bool { return v.FollowSymlinks }).(pulumi.BoolPtrOutput)
}

func (o FileStatResultOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Gid }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) Inode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Inode }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) Nlink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Nlink }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileStatResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o FileStatResultOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.Sha256Checksum }).(pulumi.StringPtrOutput)
}

func (o FileStatResultOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileStatResult) *int { return v.Uid }).(pulumi.IntPtrOutput)
}

func (o FileStatResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStatResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FileStatResultOutput{})
}
